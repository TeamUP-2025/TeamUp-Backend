-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TABLE "goose_db_version" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "goose_db_version_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"version_id" bigint NOT NULL,
	"is_applied" boolean NOT NULL,
	"tstamp" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "repo" (
	"repoid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"uid" uuid,
	"name" varchar NOT NULL,
	"url" varchar NOT NULL,
	"description" varchar,
	"star" integer,
	"fork" integer,
	"last_updated" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"language" varchar,
	"updated_at" timestamp with time zone,
	CONSTRAINT "unique_user_repo" UNIQUE("uid","name")
);
--> statement-breakpoint
CREATE TABLE "goal" (
	"projectid" uuid,
	"name" varchar NOT NULL,
	"goalid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"description" varchar
);
--> statement-breakpoint
CREATE TABLE "project" (
	"projectid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"title" varchar NOT NULL,
	"description" varchar NOT NULL,
	"repoid" uuid,
	"status" varchar,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"licenseid" uuid,
	CONSTRAINT "project_title_key" UNIQUE("title")
);
--> statement-breakpoint
CREATE TABLE "license" (
	"licenseid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"name" varchar NOT NULL,
	"description" varchar NOT NULL,
	"permission" varchar,
	"condition" varchar,
	"limitation" varchar NOT NULL,
	CONSTRAINT "license_name_key" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE "donation" (
	"donationid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"uid" uuid NOT NULL,
	"projectid" uuid NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);
--> statement-breakpoint
CREATE TABLE "application" (
	"appid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"uid" uuid NOT NULL,
	"projectid" uuid NOT NULL,
	"coverletter" varchar
);
--> statement-breakpoint
CREATE TABLE "tag" (
	"tagid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"name" varchar NOT NULL
);
--> statement-breakpoint
CREATE TABLE "user" (
	"uid" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"login" varchar NOT NULL,
	"name" varchar NOT NULL,
	"avatar" varchar,
	"location" varchar,
	"token" varchar NOT NULL,
	"bio" text,
	"followers" integer DEFAULT 0,
	"following" integer DEFAULT 0,
	"public_repos" integer DEFAULT 0,
	"total_private_repos" integer DEFAULT 0,
	"html_url" varchar,
	"last_updated" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT "user_login_key" UNIQUE("login")
);
--> statement-breakpoint
CREATE TABLE "ChatMessage" (
	"messageId" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"projectId" uuid NOT NULL,
	"login" varchar NOT NULL,
	"content" text NOT NULL,
	"createdAt" timestamp(6) with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "projectTag" (
	"projectid" uuid NOT NULL,
	"tagid" uuid NOT NULL,
	CONSTRAINT "projectTag_pkey" PRIMARY KEY("projectid","tagid")
);
--> statement-breakpoint
CREATE TABLE "userTag" (
	"uid" uuid NOT NULL,
	"tagid" uuid NOT NULL,
	CONSTRAINT "userTag_pkey" PRIMARY KEY("uid","tagid")
);
--> statement-breakpoint
CREATE TABLE "teammember" (
	"projectid" uuid NOT NULL,
	"uid" uuid NOT NULL,
	"role" varchar NOT NULL,
	CONSTRAINT "teammember_pkey" PRIMARY KEY("projectid","uid")
);
--> statement-breakpoint
CREATE TABLE "roadmap" (
	"projectid" uuid NOT NULL,
	"roadmap" varchar NOT NULL,
	"description" varchar NOT NULL,
	"status" varchar NOT NULL,
	CONSTRAINT "roadmap_pkey" PRIMARY KEY("projectid","roadmap")
);
--> statement-breakpoint
ALTER TABLE "repo" ADD CONSTRAINT "repo_uid_fkey" FOREIGN KEY ("uid") REFERENCES "public"."user"("uid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "goal" ADD CONSTRAINT "goal_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "project" ADD CONSTRAINT "project_repoid_fkey" FOREIGN KEY ("repoid") REFERENCES "public"."repo"("repoid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "project" ADD CONSTRAINT "project_licenseid_fkey" FOREIGN KEY ("licenseid") REFERENCES "public"."license"("licenseid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "donation" ADD CONSTRAINT "donation_uid_fkey" FOREIGN KEY ("uid") REFERENCES "public"."user"("uid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "donation" ADD CONSTRAINT "donation_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "application" ADD CONSTRAINT "application_uid_fkey" FOREIGN KEY ("uid") REFERENCES "public"."user"("uid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "application" ADD CONSTRAINT "application_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "ChatMessage" ADD CONSTRAINT "fk_chatmessage_project" FOREIGN KEY ("projectId") REFERENCES "public"."project"("projectid") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "ChatMessage" ADD CONSTRAINT "fk_chatmessage_user_login" FOREIGN KEY ("login") REFERENCES "public"."user"("login") ON DELETE restrict ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectTag" ADD CONSTRAINT "projectTag_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectTag" ADD CONSTRAINT "projectTag_tagid_fkey" FOREIGN KEY ("tagid") REFERENCES "public"."tag"("tagid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "userTag" ADD CONSTRAINT "userTag_uid_fkey" FOREIGN KEY ("uid") REFERENCES "public"."user"("uid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "userTag" ADD CONSTRAINT "userTag_tagid_fkey" FOREIGN KEY ("tagid") REFERENCES "public"."tag"("tagid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "teammember" ADD CONSTRAINT "teammember_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "teammember" ADD CONSTRAINT "teammember_uid_fkey" FOREIGN KEY ("uid") REFERENCES "public"."user"("uid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "roadmap" ADD CONSTRAINT "roadmap_projectid_fkey" FOREIGN KEY ("projectid") REFERENCES "public"."project"("projectid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "idx_chatmessage_project_user_created" ON "ChatMessage" USING btree ("projectId" text_ops,"login" text_ops,"createdAt" text_ops);
*/