// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package sql

import (
	"context"
)

const getAllUser = `-- name: getAllUser :many
SELECT  FROM user
`

type getAllUserRow struct {
}

func (q *Queries) getAllUser(ctx context.Context) ([]getAllUserRow, error) {
	rows, err := q.db.Query(ctx, getAllUser)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []getAllUserRow
	for rows.Next() {
		var i getAllUserRow
		if err := rows.Scan(); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
